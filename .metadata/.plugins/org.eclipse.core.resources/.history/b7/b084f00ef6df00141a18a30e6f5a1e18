<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.hyukjae.portfolio" />
	
<!-- 	<beans:bean id="boardDao"
	    class="com.hyukjae.portfolio.dao.BoardDao" >
  		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
	</beans:bean>
	<beans:bean id="memberDao"
	    class="com.hyukjae.portfolio.dao.MemberDao" >
  		<beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	  <beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	
	<beans:bean id="dataSource"
	    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName">
			<beans:value>org.gjt.mm.mysql.Driver</beans:value>
		</beans:property>
		<beans:property name="url">
			<beans:value>jdbc:mysql://localhost/hyukjae89?useUnicode=yes&amp;characterEncoding=EUC_KR</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>hyukjae89</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>wnddy1532@</beans:value>
		</beans:property>
	</beans:bean> -->
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"></beans:property>
        <beans:property name="url" value="jdbc:mysql://localhost:8589/hyukjae89"></beans:property>
        <beans:property name="username" value="hyukjae89"></beans:property>
        <beans:property name="password" value="wnddy1532@"></beans:property>
    </beans:bean>
    
    <!-- mybatis 설정 -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
        <beans:property name="mapperLocations" value="classpath:/com/hyukjae/portfolio/mapper/query.xml"></beans:property>
    </beans:bean>
    
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg ref="sqlSessionFactory"></beans:constructor-arg>
    </beans:bean>

	<beans:bean id="boardDao" class="com.hyukjae.portfolio.dao.BoardDao">
		<beans:property name="sqlSession" ref="sqlSession"></beans:property>
	</beans:bean>
   	<beans:bean id="memberDao" class="com.hyukjae.portfolio.dao.MemberDao">
		<beans:property name="sqlSession" ref="sqlSession"></beans:property>
	</beans:bean>
	
    	
   	<!-- 트랜잭션 관리자 -->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
    </beans:bean>
   
	<!-- Annotation을 사용한 트랜잭션 사용시 활성화 -->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" /> -->
</beans:beans>
